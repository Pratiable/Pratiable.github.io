{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"bccb5241-04d2-5b26-8a37-c245cf6eb7ee","excerpt":"Nest.js에서의 unit-test Nest.js는 기본 테스트 라이브러리로 jest를 지원하고 있다. CLI로 서비스나 컨트롤러를 생성할 때 파일명 뒤에 가 붙은 파일이 테스트를 위해 자동으로 생성된다. spec.ts가 생성되었을 때 기본 코드 Jest란? 일단 Nest.js의 unit-test를 작성하기 전에 Jest에 대해서 알아볼 필요가 있다고 생각한다. Jest는 Facebook에서 만든 테스트 라이브러리이고 Jest가 나오기 이전에 javascript 코드를 테스트하기 위해서는 여러 가지 테스트 라이브러리들을 설치해서 서로 조합해서 사용해야 했는데 Jest를 사용할 경우에는 많은 기능을 한 번에 지원하기 때문에 라고 할 수 있다. 테스트 코드가 직관적이기도 하고 문서화도 잘 되어있어 생산성, 가독성 면에서도 효과적이다! Nest.js에서의 Jest를 활용한 Mocking 이제 Nest.js에서의 Jest를 활용한 Mocking을 진행해 볼 텐데 그 전에 일단 Mocki…","frontmatter":{"categories":"Testing","title":"Jest로 Nest.js 유닛테스트 해보기!","date":"September 25, 2021"},"fields":{"slug":"/nest-unittest-using-jest-1/"}}},{"node":{"id":"3e933c34-65fa-579a-9583-7952a371df45","excerpt":"Database란? 일반적으로 컴퓨터 시스템에 저장된 정보 또는 데이터의 집합 DBMS()으로 제어 데이터와 DBMS는 연관된 어플리케이션들과 함께 으로 일컬어지며 더 짧게는 데이터베이스라고 통칭되기도 함 어플리케이션에서는 데이터가 메모리상에 존재하고 메모리에 존재하는 데이터는 보존이 되지 않기 때문에 애플리케이션이 종료되면 메모리에 있던 데이터들은 다시 읽어들일 수 없어서 데이터를\n오랜기간 저장 및 보존하기 위해서 데이터베이스라고 통칭 (관계형 데이터베이스)와 로 명칭되는 비관계형 데이터베이스가 있음 Database를 사용하는 이유? 데이터를 오랜기간 저장 및 보존 어플리케이션에서는 데이터가 메모리상에 존재하고 메모리에 존재하는 데이터는 보존이 되지 않기 때문에 종료되면 메모리에 있던 데이터들은 다시 읽어들일 수 없어서 데이터를 오랜기간 저장 및 보존하기 위해 데이터를 체계적으로 보존하고 관리하기 위해 사용 내가 원하는 자료를 쉽게 읽어낼 수 있어야만 의미 있는 정보기 때문 RD…","frontmatter":{"categories":"Database","title":"Database","date":"September 21, 2021"},"fields":{"slug":"/about-database/"}}},{"node":{"id":"03861738-706d-54a6-a59b-60e3809b76c4","excerpt":"js로 알고리즘 풀다가 시간초과 나올 때(console.log 관련) 왜 시간초과가 나오니… 백준에서 알고리즘 문제를 푸는데 시간초과로 정답 통과가 안되는 상황이 발생했다.\n로직적인 문제인건지 계속 생각해보며 코드 수정을 했는데 시간이 좀 오래 걸릴만한 테스트 케이스로 테스트 해보니\n뭔가 터미널에 로그가 늦게찍히는 느낌이 들었다. 전에 python으로 백준에서 문제를 풀 때 을 사용할 때 너무 느려서 \n을 사용해서 해결한 적이 있었기에 설마 js에서도 비슷한 문제인건지 찾아봤는데 역시 가 너무 느려서 시간초과가 일어난거였다! 이렇게 하고 값을 4, 5정도만 해보고 괜찮은 것 같아서 제출했었는데 20으로 테스트하게 되면 가 백만번 이상 호출되었기 때문에 시간초과가 일어나게 된 것이었다. 해결방법 #1 때문에 속도가 느려졌으니 로 한 번에 모두 출력하기 위해서 array를 따로 만들고 거기에 출력들을 전부다 집어넣어서 join메서드를 활용해서 출력했다! 이렇게 해서 제출해보니 일단 통…","frontmatter":{"categories":"알고리즘","title":"js로 알고리즘 풀다가 시간초과 나올 때","date":"September 07, 2021"},"fields":{"slug":"/boj-js-output-problem/"}}},{"node":{"id":"84a84519-82e2-5a5d-ba5e-49240d7ca3a0","excerpt":"⛔️ 공부하며 정리한 내용으로 내용상 정확하지 않은 부분이 있을 수 있으니 참고 부탁드립니다! 수정이 필요한 부분은 Comment 남겨주시면 감사하겠습니다! 이 글을 쓰는 목적🤔 를 공부하다 보니 를 공부할 때와는 달리 처음보는 개념들이 너무 많았는데 그 중에서 Dependency Injection은 가장 자주나오고 앞으로 무슨 언어 & 프레임워크로 개발을 진행하던지 상관없이 알아야 할 필수 개념, OOP을 위한 부분 같아서 글로써 정리해보고자 한다! Dependency Injection(의존성 주입)이란? 간단하게 설명하자면 class간의 의존성을 class 외부에서 주입하는것을 말하는데 아래에 하나씩 적어보며 이해해 보기로 하자! 의존성? 일단 의존성이란 객체들이 서로 의존 관계를 가진 성질이라고 간단하게 정리 할 수 있다! 객체가 두 개가 존재할 때 한 객체가 존재하려면 다른 하나를 필요로 할 때 의존성이 생긴다고 할 수 있는데, 일단\n이해가 잘 안되니 아래 코드로 일단 살펴보…","frontmatter":{"categories":"디자인패턴","title":"Dependency Injection","date":"August 29, 2021"},"fields":{"slug":"/dependency-injection/"}}},{"node":{"id":"32067f2c-990a-5b26-b9ec-7102480c0ebd","excerpt":"Velog 에서 Github Blog로 이전! 열심히 하자!","frontmatter":{"categories":"잡담","title":"Github blog로 이전했습니다!","date":"August 17, 2021"},"fields":{"slug":"/blog-test/"}}},{"node":{"id":"b062d06e-9243-57ed-84a1-5b4dbf1d3922","excerpt":"Project 고기각 리뷰 프로젝트 고기각🍖 정육각 사이트를 모티브로 한 팀 프로젝트 개발 기간 및 인원 개발 기간\n2021년 7월 5일 - 2021년 7월 16일 (2주) 개발 인원 FE : 박관용, 이재현, 장운서 BE : 이준영, 서정민, 최현정 모델링  사용한 기술 & 툴 Python Django MySQL pyJWT Bcrypt AWS (EC2, RDS) Git, Github Trello Slack Notion API Document 고기각 Back End API Github Repository GitHub - Pratiable/Project_gogigak 구현했던 기능 (본인이 구현한 기능은 ✅로 표현하였습니다) 제품 리스트 필터링 기능 (카테고리 별, 판매순/리뷰순/가격순) 제품에 대한 리뷰 작성/읽기/삭제 기능 2개의 로그인 decorator를 이용한 비로그인/로그인 상태 별 리뷰 읽기 기능 장바구니의 제품 보기/추가/수량 변경/삭제 기능 및 재고, 판매량 관리✅ 장…","frontmatter":{"categories":"회고","title":"Project 고기각 Review","date":"July 26, 2021"},"fields":{"slug":"/project-gogigak-review/"}}},{"node":{"id":"e45b198a-9590-5dd0-9bf3-74c039b5b694","excerpt":"인생에서의 첫 프로젝트, 협업을 진행하며 처음이란 것은 항상 두렵고, 또 설렌다고 생각한다. 이번 프로젝트를 진행하면서의 내가 그렇다.\n지금까지 살아오면서 프로젝트, 협업?이라고 할만한 것들을 해본 적이 없어서 더욱 그랬던 것 같다.\n개발자가 되기 위해 개발 공부를 시작한 이후로 동료들과 이렇다 할 협업이란 것을 해 본 적이 없었는데 드디어 부트 캠프의 꽃이라는 프로젝트를 시작하게 되었다! 프로젝트를 시작하면서 목표를 정한 것이 있었다면 프로젝트도, 협업도, 그 흔한 조별 과제조차 해보지 못한 내가 과연 다른 사람에게 함께하고 싶은 개발자가 될 수 있을까🤔? 함께하고 싶은 개발자가 되어 보자😊! 라는 생각을 가지고 프로젝트에 임하게 되었다. 팀원들과의 첫 만남 팀이 정해진 첫날… 프로젝트를 같이하게 될 팀원들을 확인하고 사실 걱정이 많이 됐었다. 프론트엔드 팀원분들은 그래도 나름 얘기도 좀 해봤거나 전에 간단한 과제를 통해서 서로 알게 된 분들이었는데 오히려 백엔드 팀원분들과는 프…","frontmatter":{"categories":"회고","title":"Project 고기각을 뒤로하며","date":"July 19, 2021"},"fields":{"slug":"/project-gogigak/"}}},{"node":{"id":"bf20db5f-ed4f-5875-8c96-73ced440a2e7","excerpt":"HTTP란? HyperText Transfer Protocol의 약자로 World Wide Web상에서 정보를 주고 받을 수 있는 프로토콜이며 다시 말해 컴퓨터들끼리 HTML파일을 주고받을 수 있도록 하는 소통방식 또는 약속 HTTP통신의 특징 1. Request / Response (요청/응답) 보내는 주체와 받는 주체가 있으며 사람도 소통하려면 보내는 것과 받는 것이 있듯이 컴퓨터도 사람과의 소통방식과 큰 차이가 없음\n에서 , 에서 해주는 것이 한 세트 HTTP 통신의 핵심은 요청과 응답이다! 2. Stateless 각각의 HTTP 통신은 모두 독립적이기 때문에 과거의 통신의 결과를 보존하지 않음\n즉, 매 통신마다 필요한 모든 정보를 담아서 요청을 보내야 함 여러번의 통신 진행과정에서 연속된 데이터 처리가 필요한 경우를 위하여 로그인 토큰, 브라우저의 쿠키, 세션, 그리고 로컬 스토리지 같은 기술이 필요에 의해 만들어짐 만약 통신이 독립적이지 않고 내용을 전부 다 저장해버리면 …","frontmatter":{"categories":"Web","title":"HTTP","date":"June 18, 2021"},"fields":{"slug":"/about-http/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"이준영","bio":{"role":"개발자","description":["소통의 가치를 아는","지식의 나눔을 실천하는","효율적인 시스템을 추구하는"],"thumbnail":"memoji.gif"},"social":{"github":"https://github.com/Pratiable","linkedIn":"","email":"ambitiouskyle@gmail.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1562467322","2938748437"]}