{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Testing","result":{"pageContext":{"currentCategory":"Testing","categories":["All","회고","Testing","Database","알고리즘","디자인패턴","잡담","Web"],"edges":[{"node":{"id":"bccb5241-04d2-5b26-8a37-c245cf6eb7ee","excerpt":"Nest.js에서의 unit-test Nest.js는 기본 테스트 라이브러리로 jest를 지원하고 있다. CLI로 서비스나 컨트롤러를 생성할 때 파일명 뒤에 가 붙은 파일이 테스트를 위해 자동으로 생성된다. spec.ts가 생성되었을 때 기본 코드 Jest란? 일단 Nest.js의 유닛테스트를 작성하기 전에 Jest에 대해서 알아볼 필요가 있다고 생각한다. Jest는 Facebook에서 만든 테스트 라이브러리이고 Jest가 나오기 이전에 javascript코드를 테스트하기 위해서는 여러가지 테스트 라이브러리들을 설치해서 서로 조합해서 사용해야 했는데 Jest를 사용할 경우에는 많은 기능을 한 번에 지원하기 때문에 효과적인 테스트 라이브러리라고 할 수 있다. 테스트 코드가 직관적이기도 하고 문서화도 잘 되어있어 생산성, 가독성 면에서도 효과적이다! Nest.js에서의 Jest를 활용한 Mocking 이제 Nest.js에서의 Jest를 활용한 Mocking을 진행해 볼 텐데 그 전에 …","fields":{"slug":"/nest-unittest-using-jest-1/"},"frontmatter":{"categories":"Testing","title":"Jest로 Nest.js 유닛테스트 해보기!","date":"September 25, 2021"}},"next":{"fields":{"slug":"/about-database/"}},"previous":null}]}},"staticQueryHashes":["1073350324","2938748437"]}